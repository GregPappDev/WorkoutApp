// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WorkoutAppApi.Data;

#nullable disable

namespace WorkoutAppApi.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20240130094413_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WorkoutAppApi.Models.Excercise", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Excercises");
                });

            modelBuilder.Entity("WorkoutAppApi.Models.RepsOfExcercise", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("ActualReps")
                        .HasColumnType("int");

                    b.Property<int?>("ActualWeight")
                        .HasColumnType("int");

                    b.Property<bool>("Completed")
                        .HasColumnType("bit");

                    b.Property<int?>("Duration")
                        .HasColumnType("int");

                    b.Property<Guid>("ExcerciseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("PlannedReps")
                        .HasColumnType("int");

                    b.Property<int?>("PlannedWeight")
                        .HasColumnType("int");

                    b.Property<int?>("RestTime")
                        .HasColumnType("int");

                    b.Property<Guid>("WorkoutId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ExcerciseId");

                    b.HasIndex("WorkoutId");

                    b.ToTable("RepsOfExcercises");
                });

            modelBuilder.Entity("WorkoutAppApi.Models.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("WorkoutAppApi.Models.Workout", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(21)
                        .HasColumnType("nvarchar(21)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId1")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId1");

                    b.ToTable("Workouts");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Workout");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("WorkoutAppApi.Models.ScheduledWorkout", b =>
                {
                    b.HasBaseType("WorkoutAppApi.Models.Workout");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("EndOfWorkout")
                        .HasColumnType("datetime2");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("StartofWorkout")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasIndex("UserId");

                    b.HasDiscriminator().HasValue("ScheduledWorkout");
                });

            modelBuilder.Entity("WorkoutAppApi.Models.Excercise", b =>
                {
                    b.HasOne("WorkoutAppApi.Models.User", null)
                        .WithMany("Excercises")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("WorkoutAppApi.Models.RepsOfExcercise", b =>
                {
                    b.HasOne("WorkoutAppApi.Models.Excercise", "Excercise")
                        .WithMany("RepsOfExcercise")
                        .HasForeignKey("ExcerciseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WorkoutAppApi.Models.Workout", "Workout")
                        .WithMany("SetsAndReps")
                        .HasForeignKey("WorkoutId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Excercise");

                    b.Navigation("Workout");
                });

            modelBuilder.Entity("WorkoutAppApi.Models.Workout", b =>
                {
                    b.HasOne("WorkoutAppApi.Models.User", null)
                        .WithMany("Workout")
                        .HasForeignKey("UserId1");
                });

            modelBuilder.Entity("WorkoutAppApi.Models.ScheduledWorkout", b =>
                {
                    b.HasOne("WorkoutAppApi.Models.User", null)
                        .WithMany("ScheduledWorkouts")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("WorkoutAppApi.Models.Excercise", b =>
                {
                    b.Navigation("RepsOfExcercise");
                });

            modelBuilder.Entity("WorkoutAppApi.Models.User", b =>
                {
                    b.Navigation("Excercises");

                    b.Navigation("ScheduledWorkouts");

                    b.Navigation("Workout");
                });

            modelBuilder.Entity("WorkoutAppApi.Models.Workout", b =>
                {
                    b.Navigation("SetsAndReps");
                });
#pragma warning restore 612, 618
        }
    }
}
